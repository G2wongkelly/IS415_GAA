---
title: "In_Class_Ex09"
author: "Wong Kelly"
date-modified: "`r Sys.Date()`"
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

# Install packages

```{r}
pacman::p_load(sf, spdep, GWmodel, SpatialML, tidyverse, tmap, ggpubr, olsrr, devtools, tidymodels, rsample)
```

# Preparing data - reading data file to rds

```{r}
mdata <- read_rds("data/aspatial/mdata.rds")
```

# Data sampling

```{r}
set.seed(1234)
resale_split <- initial_split(mdata,
                              prop = 6.5/10,)
train_data <- training(resale_split)
test_data <- testing(resale_split)
```

```{r}
write_rds(train_data, "data/model/train_data.rds")
write_rds(test_data, "data/model/test_data.rds")
```

```{r}
price_mlr <- lm(resale_price ~ floor_area_sqm + 
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL +
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                data=train_data)
summary(price_mlr)

```

```{r}
write_rds(price_mlr, "data/model/price_mlr.rds")
```

# GWR predictive method

In this section, GWR method will be used calibrate a model to predict the HDB resale prices

```{r}
train_data_sp <- as_Spatial(train_data)
train_data_sp
```

# Preparing Coordinates Data

## Extracting Coordinates Data

The code chunk below extract the x,y coordinates of the full, training and test data sets

```{r}
coords <- st_coordinates(mdata)
coords_train <- st_coordinates(train_data)
coords_test <- st_coordinates(test_data)
```

```{r}
coords_train <- write_rds(coords_train, "data/model/coords_train.rds")
coords_test <- write_rds(coords_test, "data/model/coords_test.rds")
```

# Droping Geometry Field

First, we will drop geometry column of the sf data.frame by using 'st_drop_geometry()' of sf package.

```{r}
train_data <- train_data %>%
  st_drop_geometry()
```

# Calibrating Random Forest

```{r}
set.seed(1234)
rf <- ranger(resale_price ~ floor_area_sqm + 
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL +
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                data=train_data)
```

```{r}
print(rf)
```

The code chunk below calibrate a geographic random forest model by using GRF() of spatialML package.

```{r}
set.seed(1234)
gwRF_adapative <- grf(formula =resale_price ~ floor_area_sqm + 
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL +
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                  dframe = train_data,
                  bw = 55,
                  kernel = "adaptive",
                  coords=coords_train)
```

Let's save the model output by using the code chunk below

```{r}
write_rds(gwRF_adapative, "data/model/gwRF_adapative.rds")
```

# Predicting by using test data

## Preparing the test data

The code chunk below will be used to combine the test data with its corresponding coordinates data

```{r}
test_data <- cbind(test_data, coords_test) %>%
  st_drop_geometry()
```

## Predicting with test data

Next, predict.grf() of spatialML package will be used to predict the resale value by using the test data and gwRF_adapative model caliberated earlier.

(run the code at home)

gwRF_pred \<- predict.grf(gwRF_adaptive,

test_data,

x.var.name = "X",

y.var.name = "Y",

local.w = 1,

global.w = 0)
